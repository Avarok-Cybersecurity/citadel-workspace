name: Validate PR
on:
  workflow_call:
  pull_request:
  push:
    branches: ["master"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  # 40 MiB stack
  RUST_MIN_STACK: 40971520
  RUST_LOG: 'citadel=warn'

jobs:
  fmt:
    name: Cargo Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: Run Cargo Fmt
        run: cargo fmt --check
        working-directory: src-tauri

  clippy:
    name: Cargo Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies (Ubuntu Only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Frontend Dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - name: Run Cargo Clippy
        run: cargo clippy --all -- -D warnings
        working-directory: src-tauri

  tauri-build:
    name: Tauri Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies (Ubuntu Only)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libglvnd-dev libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Dependencies (Windows Only)
        if: startsWith(matrix.os, 'windows')
        run: |
          vcpkg install openssl:x64-windows-static-md
      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        if: startsWith(matrix.os, 'windows')
      - name: Install Bun
        run: npm install -g bun
      - name: Install Tauri CLI
        run: cargo install tauri-cli --version 2.0.0-beta.20
        working-directory: src-tauri
      - name: Run Tauri Build
        run: cargo tauri build --verbose
        working-directory: src-tauri

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Node v20
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: Yarn Install
        run: yarn install
      - name: Run ESLint
        uses: icrawl/action-eslint@v1
        with:
          custom-glob: '**/*.{js,ts,tsx}'
