name: Validate PR
on:
  workflow_call:
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  # 40 MiB stack
  RUST_MIN_STACK: 40971520
  RUST_LOG: 'citadel=warn'

jobs:
  fmt:
    name: Cargo Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - run: cargo fmt --check
  clippy:
    name: Cargo Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - run: cargo clippy --all -- -D warnings
  test:
    name: Cargo Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: oven-sh/setup-bun@v1
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get remove homebrew
          sudo apt-get install -y libwebkit2gtk-4.1-dev libglvnd-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: install frontend dependencies
        run: bun install # change this to npm or pnpm depending on which one you use
      - name: PKG config
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get install --reinstall pkg-config
          sudo apt install --reinstall libgtk-3-dev
          sudo apt-get install --reinstall libsoup-3.0-dev
          sudo apt-get install --reinstall libsoup-3.0-0
          sudo apt-get install --reinstall libjavascriptcoregtk-4.1-dev
          sudo apt-get install --reinstall libwebkit2gtk-4.1-dev
          sudo /usr/share/pkg-config-dpkghook update
          pkg-config --cflags gtk+-3.0
      - run: cargo test
  tauri-build:
    name: Tauri Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: Avarok-Cybersecurity/gh-actions-deps@master
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: oven-sh/setup-bun@v1
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libglvnd-dev libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - run: cargo install create-tauri-app
      - run: cargo install tauri-cli --version 2.0.0-alpha.21
      - run: bun install
      - uses: tauri-apps/tauri-action@v0
  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: install node v20
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: yarn install
        run: yarn install
      - name: eslint
        uses: icrawl/action-eslint@v1
        with:
          custom-glob: '**/*.{js,ts,tsx}'
